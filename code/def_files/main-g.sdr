layout (triangles) in;
layout (triangle_strip, max_vertices = 3) out;
uniform mat4 shadow_proj_matrix[4];
in float geoInstance[];
in vec3 geoNormal[];
in vec4 geoTexCoord[];
out vec4 fragPosition;
out vec3 fragNormal;
out vec4 fragTexCoord;
#ifdef FLAG_TRANSFORM
in float geoNotVisible[];
out float fragNotVisible;
#endif
#ifdef FLAG_CLIP
in float geoClipDistance[];
out float fragClipDistance;
#endif
void main(void)
{
	int instanceID = int(geoInstance[0]);
   for(int vert = 0; vert < gl_in.length(); vert++)
	{
		gl_Position = shadow_proj_matrix[instanceID] * gl_in[vert].gl_Position;
		if(gl_Position.z < -1.0)
			gl_Position.z = -1.0;
       fragPosition = gl_in[vert].gl_Position;
		fragNormal = geoNormal[vert];
		fragTexCoord = geoTexCoord[vert];
		gl_Layer = instanceID;
#ifdef FLAG_TRANSFORM
		fragNotVisible = geoNotVisible[0];
#endif
#ifdef FLAG_CLIP
		fragClipDistance = geoClipDistance[0];
#endif
		EmitVertex();
	}
	EndPrimitive();
}